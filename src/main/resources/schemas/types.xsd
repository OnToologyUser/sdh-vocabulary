<?xml version="1.0" encoding="UTF-8"?>
<!--

    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      This file is part of the Smart Developer Hub Project:
        http://www.smartdeveloperhub.org/

      Center for Open Middleware
        http://www.centeropenmiddleware.com/
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      Copyright (C) 2015-2016 Center for Open Middleware.
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at

                http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      Artifact    : org.smartdeveloperhub.vocabulary:sdh-vocabulary:0.3.0-SNAPSHOT
      Bundle      : sdh-vocabulary-0.3.0-SNAPSHOT.jar
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:types="http://www.smartdeveloperhub.org/vocabulary/types#" targetNamespace="http://www.smartdeveloperhub.org/vocabulary/types#" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="test">
		<xs:complexType>
			<xs:choice minOccurs="1" maxOccurs="unbounded">
				<xs:element name="uuid" type="types:UUID" nillable="false"/>
				<xs:element name="host" type="types:Hostname" nillable="false"/>
				<xs:element name="port" type="types:Port" nillable="false"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="UUID">
		<xs:restriction base="xs:token">
			<xs:pattern value="(urn:uuid:)?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Port">
		<xs:restriction base="xs:int">
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="65535"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Hostname">
		<xs:union memberTypes="types:DomainName types:IPv4Address types:IPv6Address"/>
	</xs:simpleType>
	<xs:simpleType name="DomainName">
		<xs:annotation>
			<xs:documentation>
				A valid domain name according to Section 3.5 of RFC 1034.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:pattern value="[a-zA-Z][a-zA-Z0-9]*(\-?[a-zA-Z0-9]+)*(\.[a-zA-Z][a-zA-Z0-9]*(\-?[a-zA-Z0-9]+)*)*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IPv4Address">
		<xs:annotation>
			<xs:documentation>
				Datatype for representing IP4 addresses.
				Examples, 129.83.64.255, 64.128.2.71, etc.
				This datatype restricts each field of the address
				to have a value between zero and 255,
				i.e., [0-255].[0-255].[0-255].[0-255]
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:pattern value="((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IPv6Address">
		<xs:annotation>
			<xs:documentation>An IP version 6 address, based on RFC 4291 &amp; 5952.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<!-- Fully specified address -->
			<xs:pattern value="[0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4}){7}"/>
			<!-- Double colon start -->
			<xs:pattern value=":(:[0-9A-Fa-f]{1,4}){1,7}"/>
			<!-- Double colon middle -->
			<xs:pattern value="([0-9A-Fa-f]{1,4}:){1,6}(:[0-9A-Fa-f]{1,4}){1}"/>
			<xs:pattern value="([0-9A-Fa-f]{1,4}:){1,5}(:[0-9A-Fa-f]{1,4}){1,2}"/>
			<xs:pattern value="([0-9A-Fa-f]{1,4}:){1,4}(:[0-9A-Fa-f]{1,4}){1,3}"/>
			<xs:pattern value="([0-9A-Fa-f]{1,4}:){1,3}(:[0-9A-Fa-f]{1,4}){1,4}"/>
			<xs:pattern value="([0-9A-Fa-f]{1,4}:){1,2}(:[0-9A-Fa-f]{1,4}){1,5}"/>
			<xs:pattern value="([0-9A-Fa-f]{1,4}:){1}(:[0-9A-Fa-f]{1,4}){1,6}"/>
			<!-- Double colon end -->
			<xs:pattern value="([0-9A-Fa-f]{1,4}:){1,7}:"/>
			<!-- Embedded IPv4 addresses -->
			<xs:pattern value="((:(:0{1,4}){0,3}(:(0{1,4}|[fF]{4}))?)|(0{1,4}:(:0{1,4}){0,2}(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){2}(:0{1,4})?(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){3}(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){4}(0{1,4}|[fF]{4})?)):(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])"/>
			<!-- The unspecified address -->
			<xs:pattern value="::"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
